name: Release

on:
  push:
    tags:
      - 'v*'


jobs:
  release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install

      - name: Build Windows application
        run: pnpm build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get CHANGELOG.md content
        id: changelog
        run: |
          $content = Get-Content -Path "CHANGELOG.md" -Raw
          $content = $content -replace "[r](file://E:\MyCode\taiji-ai\node_modules\react-router)n", "\n"
          $content = $content -replace "`n", "\n"
          echo "changelog_content<<EOF" >> $env:GITHUB_OUTPUT
          echo "$content" >> $env:GITHUB_OUTPUT
          echo "EOF" >> $env:GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false

      - name: Upload release assets
        run: |
          $files = Get-ChildItem -Path ".out/dist" -Recurse -Include "*.exe","*.msi","*.AppImage","*.deb","*.snap","*.dmg","*.zip"
          foreach ($file in $files) {
            echo "Uploading $file"
            curl.exe -X POST `
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" `
              -H "Content-Type: application/octet-stream" `
              --data-binary "@$($file.FullName)" `
              "${{ steps.create_release.outputs.upload_url }}?name=$($file.Name)"
          }
