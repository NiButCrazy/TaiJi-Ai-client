name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write  # 必须有写权限才能创建 release

jobs:
  release:
    runs-on: windows-latest

    steps:
      - name: Install pnpm
        run: npm install -g pnpm

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'


      - name: Install dependencies
        run: pnpm install

      - name: Build Windows application
        run: pnpm build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install nbc-auto-changelog
        run: npm install -g nbc-auto-changelog

      - name: Get CHANGELOG.md content
        id: changelog
        shell: pwsh
        run: |
          nbc-auto-changelog --stdout --starting-version "${{ github.ref_name }}" | Out-File -FilePath changelog_new.md -Encoding utf8

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: 太极AI ${{ github.ref_name }}
          body_path: changelog_new.md
          draft: false
          prerelease: false


      # 上传 Windows 构建产物
      - name: Upload release assets (Windows only)
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $uploadUrl = "${{ steps.create_release.outputs.upload_url }}".Replace("{?name,label}", "")
          $files = Get-ChildItem ".out/dist/*.exe" -File
          foreach ($file in $files) {
            $fileNameEscaped = [System.Uri]::EscapeDataString($file.Name)
            $finalUrl = "$uploadUrl?name=$fileNameEscaped"
            Write-Host "Uploading $file"
            Invoke-RestMethod -Method Post `
              -Uri $finalUrl `
              -Headers @{
                "Authorization" = "Bearer $env:GITHUB_TOKEN"
                "Content-Type"   = "application/octet-stream"
              } `
              -InFile $file.FullName
          }
